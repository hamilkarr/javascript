생성자 (붕어빵 틀)
  - 객체 (붕어빵)를 생성
  - 객체를 만드는 틀

  함수 객체를 가지고 생성자를 만든다.

  function 생성자명 (.....)  {
    // 생성자 정의
    this.속성명 = 값; (원시타입, 객체, 함수 객체)

  }

  객체 생성 연산자
    new (강의_객체 메모리)

    생성자로부터 객체가 힙 영영게 생성
  객체는 힙 영역에 생성이 된다.

  """"변수는 객체를 찾아주는 주소.""""

  생성된 객체 - 인스턴스

  function person () {
    this.age = 40;
    this.gender = "F";
    this.walk = function() {
        console.log ("걷기");
    };
}

  정의된 속성 접근은 객체 생성 이후 접근이 가능하다.
  this --> 객체가 생성이 된 후 존재.
       --> 생성된 객체(인스턴스) 주소를 가지고 있는 변수
       --> 생성자 내부에만 존재하는 변수.
       --> 외부에 생성된 생성자 변수와 동일한 주소를 가지고 잇다.
       --> 차이점은 외부, 내부


  함수 - > 함수, 생성자
  관례적으로 생성자는 앞 첫글자 -> 대문자로
  관례적으로 함수는 앞 첫글자 -> 소문자

  - 함수명 명명 방식
  단어의 시작은 대문자 - > 첫글자는 소문자 -> 카멜케이스
  ex) function orderProcess () {} -- >> order"P"rocess

  - 변수명 명명방식도 카멜케이스
  ex) const orderProcess = "delivery"

  - 생성자 명명 방식
  단어의 시작은 대문자 -> 첫글자도 소문자 -> 파스칼케이스
  ex) function OrderProcess() {}


  생성자 인수 --> 객체 생성시 초기화(변수가 생성되자마자 값을 대입) 역할

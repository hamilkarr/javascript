timer 
  global 
    .setTimeout(function() {

    }, 지연시간);
      clearTimeout(백그라운드 대기 아이디);


    .setInterval(function() {

    }, 지연반복시간);
      clearInterver(백그라운드 대기 아이디);


    .setImmediate(function() { // 비동기 즉시 실행

    })
      clearImmediate(백그라운드 아이디);


    실행순서
    1. setImmediate, 2. setTimeout(function(){}, 0)


  참고) 브라우저 객체모델
    window
      .setTimeout(function() {
        // 백그라운드 대기 -> 지연시간에 도달하면 이벤트 발생 -> 호출 스택에서 실행
        // 비동기, Event Driven 방식
        -> setTimeout 을 호출  -> 반환값은 백그라운드 대기 아이디
      } , 지연시간);
      
      .setInterval

      setTimeout(무거운 작업, 0);

      clearTimeout(백그라운드 대기 아이디); // 지연실행 취소
      clearInterver(백그라운드 대기 아이디);

07. file

  __filename -> 현재 실행중인 스크립트 파일의 절대 경로인 디렉토리 + 파일명
  __dirname -> 현재 실행중인 스크립트 파일의 절대 경로인 디렉토리

08. this
  this -> 전역 (module.exports), 함수 안에서 (global)
  
  참고) 브라우저 객체 모델
    this -> 전역 (window), 함수 안에서도 (window)

09. process

10. path
  내장모듈 -> require("모듈명"); // 모듈명 -> 디렉토리명
  .sep -> 파일, 디렉토리 구분자 : 윈도우 \, 리눅스,맥(유닉스) -> POSIX -> /
  .delimiter -> 환경변수 구분자
    - 윈도우 ;
    - 리눅스,맥(유닉스) :
  .dirname() -> 파일이 위치한 폴더 경로
  .extname() -> 파일의 확장자
  .basename(파일경로,확장자명); -> 파일명(확장자를 제외);

  .parse() -> 파일 경로 -> 분해(root, dir, base, ext, name ...) // pathinfo
  .format() -> 분해된 파일 경로(path) -> 원래 문자열 형태의 경로

  .normalize(); 형식에 맞지 않는 경로를 형식에 맞게 정상화
  .join() -> 기준 경로에 추가된 상대경로를 자동으로 절대 경로 변경

querystring 모듈
  .parse() -> 쿼리스트링값(키=값&키=값)


Event 
  이벤트 등록
  .on
  .addListener

  이벤트 발생
  .emit("eventName")
  .once("eventName") -  이벤트 1개만 발생

  이벤트 제거
  removeListener("이벤트명","이벤트 핸들러");
  removeAllListeners("이벤트명");
  .off("이벤트명","이벤트 핸들러");

  등록된 이벤트 개수
  .listenerCount("이벤트");

참고)
  브라우저 객체모델
    document
      -> event
        .isTrusted